<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JFrog Platform with Docker Compose &amp; ECS on On Your Own Setup</title>
    <link>//localhost:1313/3_deploy_ecs.html</link>
    <description>Recent content in JFrog Platform with Docker Compose &amp; ECS on On Your Own Setup</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="//localhost:1313/3_deploy_ecs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Download the Code</title>
      <link>//localhost:1313/3_deploy_ecs/31_download_code.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/3_deploy_ecs/31_download_code.html</guid>
      <description>The code is located at https://github.com/jfrogtraining/aws-ecs-docker-compose-workshop GitHub repository. We will clone this repo locally in order to pull the required workshop files and scripts.
 Go to https://github.com/jfrogtraining/aws-ecs-docker-compose-workshop and fork this repository to your GitHub account.
 In your Cloud9 terminal, clone this repository to your local directory with the following command.
   git clone https://github.com/&amp;lt;github username&amp;gt;/aws-ecs-docker-compose-workshop.git</description>
    </item>
    
    <item>
      <title>Set up our JFrog Pipelines Integrations</title>
      <link>//localhost:1313/3_deploy_ecs/32_pipeline_integrations.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/3_deploy_ecs/32_pipeline_integrations.html</guid>
      <description>Our CI/CD pipeline requires access to GitHub to pull our code, access to JFrog Artifactory to deploy our Docker image and access to AWS to deploy to ECS. We will set up JFrog Pipelines integrations to enable these.
![Pipelines Integration](/images/pipeline-integrations-diagram.png) An Integration connects Pipelines to an external service/tool. Each integration type defines the endpoint, credentials and any other configuration detail required for Pipelines to exchange information with the service. All credential information is encrypted and held in secure storage, in conformance with best security practices.</description>
    </item>
    
    <item>
      <title>Update our Pipeline</title>
      <link>//localhost:1313/3_deploy_ecs/33_update_pipeline.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/3_deploy_ecs/33_update_pipeline.html</guid>
      <description>We need to make an update to our CI/CD pipeline in order to use your JFrog Platform instance. The CI/CD pipeline is defined in pipelines.yml. This pipeline file is parameterized with a values.yml file. We need to update this file.
 In your Cloud9 terminal, use the editor and view the pipelines.yml file. View and understand the steps. Note the parameterized values.
 The last step in the pipeline, ecs_deploy, deploys our application to an ECS cluster using docker compose with a special ECS context.</description>
    </item>
    
    <item>
      <title>Build, Publish and Deploy to ECS</title>
      <link>//localhost:1313/3_deploy_ecs/34_build_publish_deploy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/3_deploy_ecs/34_build_publish_deploy.html</guid>
      <description>In your JFrog Platform instance, go to Application &amp;gt; Pipelines &amp;gt; Pipeline Sources.
 Click Add a pipeline source.
 Click Add Pipeline Source at the top right and select From YAML.
 For SCM Provider Integration, select the github_integration that you created previously.
 For Repository Full Name, select your forked /aws-ecs-docker-compose-workshop.
 For Branch, select master.
 Leave Pipeline Config File Filter as pipelines.yml.
 Click Create Source.</description>
    </item>
    
    <item>
      <title>View Results in JFrog</title>
      <link>//localhost:1313/3_deploy_ecs/35_view_results.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/3_deploy_ecs/35_view_results.html</guid>
      <description>We have built and published our Docker image. Let&amp;rsquo;s view these results in the JFrog Platform.
 Go to your JFrog Platform instance and switch to the Packages view in Artifactory. Go to Artifactory â–º Packages. Search for the name of the Docker image that was built in your workshop. For the ECS build, search for ecs-docker-compose-workshop-app. For the EKS build, search for eks-workshop-app. Click on the Docker image listing.  This will show a list of the versions.</description>
    </item>
    
  </channel>
</rss>
